<objdefs appVersion="1.0.12">
   <obj.normal id="adsr_lean" uuid="6123b450-5248-4b5b-a809-6720d18feecc">
      <sDescription>Attack/decay/sustain/release envelope with modulation inputs</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>env.axh</helpPatch>
      <inlets>
         <bool32.risingfalling name="gate" description="gate"/>
         <frac32.positive name="a"/>
         <frac32.bipolar name="d" description="decay time modulation"/>
         <frac32.bipolar name="s" description="sustail level modulation"/>
         <frac32.bipolar name="r" description="release time modulation"/>
      </inlets>
      <outlets>
         <frac32.positive name="env" description="envelope output"/>
         <frac32 name="o1"/>
         <frac32.bipolar name="o1b"/>
         <frac32.positive name="o1p"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map name="d"/>
         <frac32.u.map name="s"/>
         <frac32.s.map name="r"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int8_t stage;
int ntrig;
int32_t envelope_out;]]></code.declaration>
      <code.init><![CDATA[stage = 0;
ntrig = 0;
envelope_out = 0;]]></code.init>
      <code.krate><![CDATA[if ( (inlet_gate>0) && !ntrig) { stage = 1; ntrig = 1;}
if (!(inlet_gate>0) &&  ntrig) { stage = 0; ntrig = 0;}
#define UNI2BIPOLAR(a) ((a -(1<<26) ) << 1)


outlet_o1  = UNI2BIPOLAR(inlet_a);
outlet_o1b = UNI2BIPOLAR(inlet_a);
outlet_o1p = UNI2BIPOLAR(inlet_a);

if (stage == 0) // Release!
{
   int32_t r1;
   int32_t r2;
   MTOF(- param_r - inlet_r, r1);
   r1 = 0x7FFFFFFF - (r1 >> 2);
   envelope_out = ___SMMUL(envelope_out,r1)<<1;
} 
else if (stage == 1) // Attack!
{
   int32_t a;
   //MTOF(- -64 -inlet_a,a);
   //MTOF(- param_a - inlet_a,a);
   MTOF((UNI2BIPOLAR(inlet_a))<<1,a);
   a = a >> 2;
   envelope_out = envelope_out + a;
   if (envelope_out<0)               // If the attack has finished (overflow)
   {
      envelope_out =0x7FFFFFFF;
      stage = 2;
   }
} 
else if (stage == 2) // Decay + Sustain :/
{
   int32_t s = __USAT(param_s + inlet_s, 27);
   int32_t d;
   MTOF(- param_d - inlet_d, d);
   d = 0x7FFFFFFF - (d >> 2);
   envelope_out = (s<<4) + (___SMMUL(envelope_out - (s<<4),d)<<1);
}

outlet_env = envelope_out>>4;]]></code.krate>
   </obj.normal>
</objdefs>