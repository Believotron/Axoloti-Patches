<patch-1.0 appVersion="1.0.10">
   <comment type="patch/comment" x="14" y="14" text="IMPORTANT: needs samples on sdcard!"/>
   <obj type="env/ad" uuid="255cb0cd67470c7498f9c33b820facd26aa629ce" name="ad_1" x="756" y="14">
      <params>
         <frac32.s.map name="a" value="25.0"/>
         <frac32.s.map name="d" value="19.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="lfo/square" sha="b4420b58ca2ae5ece53d53540bc91bc9ed7a4b83" name="square_1" x="14" y="56">
      <params>
         <frac32.s.map name="pitch" value="4.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/counter" sha="77a4b4804913310c0ec3fcc53592eed1cd9af148" name="counter_1" x="126" y="56">
      <params>
         <int32 name="maximum" value="16"/>
      </params>
      <attribs/>
   </obj>
   <obj type="disp/ibar 16" sha="6202b6944fb6704b4fcdfb66663aba8e11d266d4" name="ibar_1" x="224" y="56">
      <params/>
      <attribs/>
   </obj>
   <obj type="wave/play stereo" uuid="843bbc92c4a45c5ba551de32538934e186dc4a41" name="play_3" x="616" y="56">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/*" uuid="3ac307b9f782049739ed62504081b96d580ea336" name="*_1" x="910" y="56">
      <params/>
      <attribs/>
   </obj>
   <obj type="string/c" uuid="4aa90a90c435a742ddfa152d232883fc5b2f1b3" name="c_1" x="434" y="84">
      <params/>
      <attribs>
         <table attributeName="str" table="003.wav"/>
      </attribs>
   </obj>
   <obj type="sel/sel b 16 8t pulse" sha="67e67f12150c9ffcf6bb89d44faf18d1407f10da" name="sel_1" x="224" y="112">
      <params>
         <bin16 name="p1" value="1">
            <presets>
               <preset index="1">
                  <i i="37121"/>
               </preset>
               <preset index="2">
                  <i i="257"/>
               </preset>
            </presets>
         </bin16>
         <bin16 name="p2" value="269484032">
            <presets>
               <preset index="1">
                  <i i="269493248"/>
               </preset>
               <preset index="2">
                  <i i="269488128"/>
               </preset>
            </presets>
         </bin16>
         <bin16 name="p3" value="357892096">
            <presets>
               <preset index="1">
                  <i i="357930133"/>
               </preset>
               <preset index="2">
                  <i i="357897365"/>
               </preset>
            </presets>
         </bin16>
         <bin16 name="p4" value="1073741824">
            <presets>
               <preset index="1">
                  <i i="1073758272"/>
               </preset>
               <preset index="2">
                  <i i="1073758272"/>
               </preset>
            </presets>
         </bin16>
         <bin16 name="p5" value="0">
            <presets>
               <preset index="1">
                  <i i="8196"/>
               </preset>
               <preset index="2">
                  <i i="0"/>
               </preset>
            </presets>
         </bin16>
         <bin16 name="p6" value="0">
            <presets>
               <preset index="1">
                  <i i="4112"/>
               </preset>
               <preset index="2">
                  <i i="18448"/>
               </preset>
            </presets>
         </bin16>
         <bin16 name="p7" value="0"/>
         <bin16 name="p8" value="0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="script/SDFiles" uuid="BELIEVOT-RON8-4116-82b0-711e0023a830" name="SDFiles_1" x="70" y="168">
      <params/>
      <attribs>
         <text attributeName="script">
            <sText><![CDATA[void setup(void) {
	LogTextMessage("Foobar");
	LogTextMessage("This%s","That");

	//memp = (uint8_t *)&fbuff[0];
	FRESULT res;

	FILINFO fno;
	DIR dir;
	
	int index = 0;
	char *fn;
//#if 1//#if _USE_LFN
//	static char lfn[_MAX_LFN + 1]
//	fno.lfname = lfn;
//	fno.lfsize = sizeof(lfn);
//#endif
	LogTextMessage("f_opendir()");	
	res = f_opendir(&dir, "..");
	LogTextMessage("result >%0x0X<[%0x0X]",FR_OK, res);	
	if (res == FR_OK) 
	{
		for (;;) 
		{			
			//LogTextMessage("f_readdir()");	
			res = f_readdir(&dir, &fno);
			//LogTextMessage("result >%0x0X<[%0x0X]",FR_OK, res);	
			if (res != FR_OK || fno.fname[0] == 0)
			{
				if (fno.fname[0] == 0) LogTextMessage("Empty filename");
				else	
					LogTextMessage("setup.opendir.readdir.notok [%s]", fno.fname);	
				break;
			}
			if (fno.fname[0] == '.')
			{
				LogTextMessage("setup.opendir.readdir.IFoundADotf [%s]", fno.fname);	
				
				//res = f_opendir(&dir, "");
				//LogTextMessage("result >%0x0X<[%0x0X]",FR_OK, res);	
				//if (res==FR_OK)
				//{
				//	LogTextMessage("f_readdir()");	
				//	res = f_readdir(&dir, &fno);
				//	LogTextMessage("result >%0x0X<[%0x0X]",FR_OK, res);
				//	LogTextMessage("Filename[%s]",fn);						
				//}
				continue;
			}
			//fn = fno.fname;
			fn = *fno.lfname ? fno.lfname : fno.fname;
			//LogTextMessage("fno.fattrib>0x%8X<[0x%8X]",AM_DIR, fno.fattrib);	
			if (fno.fattrib & AM_DIR) 
			{ 
				LogTextMessage("Dir name[%s]",fn);	
			}  // ignore subdirectories for now
			else 
			{
				LogTextMessage("Filename[%s]",fn);	
				/*
				int l = strlen(fn);
				if ((fn[l - 4] == '.') && (fn[l - 3] == 'B') && (fn[l - 2] == 'I')
				  && (fn[l - 1] == 'N')) {
				char *s;
				s = (char *)memp;
				strcpy(s, fn);
				memp += l + 1;
				SetKVP_FNCTN(&TmpMenuKvps[index], NULL, s, &EnterMenuLoadFile);
				index++;
				*/
			}
			
		 }
		 
	}
	//SetKVP_AVP(&LoadMenu, &KvpsHead, "Load SD", index, &TmpMenuKvps[0]);
	//KvpsDisplay = &LoadMenu;
	
 

}

void loop(void)
{
	
}]]></sText>
         </text>
      </attribs>
   </obj>
   <obj type="audio/out stereo" sha="b933bb91801a126126313c11f773158b5ca2face" name="out_1" x="1022" y="210">
      <params/>
      <attribs/>
   </obj>
   <obj type="mix/mix 6 g" uuid="2dd642dee5072357722740c850699b79b8da3008" name="mix_1" x="728" y="224">
      <params>
         <frac32.u.map name="gain1" value="64.0">
            <presets/>
         </frac32.u.map>
         <frac32.u.map name="gain2" value="30.0">
            <presets/>
         </frac32.u.map>
         <frac32.u.map name="gain3" value="63.5"/>
         <frac32.u.map name="gain4" value="50.5">
            <presets/>
         </frac32.u.map>
         <frac32.u.map name="gain5" value="52.5">
            <presets/>
         </frac32.u.map>
         <frac32.u.map name="gain6" value="63.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="mix/mix 6 g" uuid="2dd642dee5072357722740c850699b79b8da3008" name="mix_2" x="868" y="308">
      <params>
         <frac32.u.map name="gain1" value="0.5">
            <presets/>
         </frac32.u.map>
         <frac32.u.map name="gain2" value="30.0">
            <presets/>
         </frac32.u.map>
         <frac32.u.map name="gain3" value="63.5"/>
         <frac32.u.map name="gain4" value="50.5">
            <presets/>
         </frac32.u.map>
         <frac32.u.map name="gain5" value="52.5">
            <presets/>
         </frac32.u.map>
         <frac32.u.map name="gain6" value="63.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="script/script2" uuid="d39e743cf47c9221f4e99c133430148cf74c68c5" name="script2_1" x="574" y="322">
      <params/>
      <attribs>
         <text attributeName="script">
            <sText><![CDATA[void setup(void) {
	LogTextMessage("Foobar");
	LogTextMessage("This%s","That");

	//memp = (uint8_t *)&fbuff[0];
	FRESULT res;

	FILINFO fno;
	DIR dir;
	
	int index = 0;
	char *fn;
//#if 1//#if _USE_LFN
//	static char lfn[_MAX_LFN + 1]
//	fno.lfname = lfn;
//	fno.lfsize = sizeof(lfn);
//#endif
	LogTextMessage("f_opendir()");	
	res = f_opendir(&dir, "..");
	LogTextMessage("result >%0x0X<[%0x0X]",FR_OK, res);	
	if (res == FR_OK) 
	{
		for (;;) 
		{			
			//LogTextMessage("f_readdir()");	
			res = f_readdir(&dir, &fno);
			//LogTextMessage("result >%0x0X<[%0x0X]",FR_OK, res);	
			if (res != FR_OK || fno.fname[0] == 0)
			{
				if (fno.fname[0] == 0) LogTextMessage("Empty filename");
				else	
					LogTextMessage("setup.opendir.readdir.notok [%s]", fno.fname);	
				break;
			}
			if (fno.fname[0] == '.')
			{
				LogTextMessage("setup.opendir.readdir.IFoundADotf [%s]", fno.fname);	
				
				//res = f_opendir(&dir, "");
				//LogTextMessage("result >%0x0X<[%0x0X]",FR_OK, res);	
				//if (res==FR_OK)
				//{
				//	LogTextMessage("f_readdir()");	
				//	res = f_readdir(&dir, &fno);
				//	LogTextMessage("result >%0x0X<[%0x0X]",FR_OK, res);
				//	LogTextMessage("Filename[%s]",fn);						
				//}
				continue;
			}
			//fn = fno.fname;
			fn = *fno.lfname ? fno.lfname : fno.fname;
			//LogTextMessage("fno.fattrib>0x%8X<[0x%8X]",AM_DIR, fno.fattrib);	
			if (fno.fattrib & AM_DIR) 
			{ 
				LogTextMessage("Dir name[%s]",fn);	
			}  // ignore subdirectories for now
			else 
			{
				LogTextMessage("Filename[%s]",fn);	
				/*
				int l = strlen(fn);
				if ((fn[l - 4] == '.') && (fn[l - 3] == 'B') && (fn[l - 2] == 'I')
				  && (fn[l - 1] == 'N')) {
				char *s;
				s = (char *)memp;
				strcpy(s, fn);
				memp += l + 1;
				SetKVP_FNCTN(&TmpMenuKvps[index], NULL, s, &EnterMenuLoadFile);
				index++;
				*/
			}
			
		 }
		 
	}
	//SetKVP_AVP(&LoadMenu, &KvpsHead, "Load SD", index, &TmpMenuKvps[0]);
	//KvpsDisplay = &LoadMenu;
	
 

}

void loop(void)
{
	
}]]></sText>
         </text>
      </attribs>
   </obj>
   <comment type="patch/comment" x="406" y="392" text="Hey! HH exclusion!"/>
   <nets>
      <net>
         <source obj="counter_1" outlet="o"/>
         <dest obj="sel_1" inlet="in"/>
         <dest obj="ibar_1" inlet="in"/>
      </net>
      <net>
         <source obj="square_1" outlet="wave"/>
         <dest obj="counter_1" inlet="trig"/>
      </net>
      <net>
         <source obj="sel_1" outlet="o1"/>
         <dest obj="play_3" inlet="start"/>
         <dest obj="ad_1" inlet="trig"/>
      </net>
      <net>
         <source obj="c_1" outlet="out"/>
         <dest obj="play_3" inlet="filename"/>
      </net>
      <net>
         <source obj="play_3" outlet="outl"/>
         <dest obj="*_1" inlet="b"/>
      </net>
      <net>
         <source obj="play_3" outlet="outr"/>
         <dest obj="mix_2" inlet="in1"/>
      </net>
      <net>
         <source obj="mix_1" outlet="out"/>
         <dest obj="out_1" inlet="left"/>
      </net>
      <net>
         <source obj="mix_2" outlet="out"/>
         <dest obj="out_1" inlet="right"/>
      </net>
      <net>
         <source obj="ad_1" outlet="env"/>
         <dest obj="*_1" inlet="a"/>
      </net>
      <net>
         <source obj="*_1" outlet="result"/>
         <dest obj="mix_1" inlet="in1"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>-2040</x>
      <y>58</y>
      <width>1220</width>
      <height>912</height>
   </windowPos>
</patch-1.0>